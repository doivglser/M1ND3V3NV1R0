#!/bin/bash
# mindevenviro shi3lD
# Changes your MAC-ADDRESS and do a list of usable and not usable MAC-ADDRESSES in $HOME
# restart clamd and snort if failure, cuts the Ethernet Interface connection while starting up, (use wicd to reconnect)
# ctrl+C cuts Ethernet Interface connection and revert to your vendors MAC-ADDRESS
###     WARNING:    DON'T EDIT ANYTHING BELOW       ### 
LANG="C" ;

		if [ ! $EUID = 0 ] && [[ "$(ps aux | grep -v grep | grep -v nano | grep -v geany| grep shi3lD | awk '{print $2}' | wc -l) " = '' ]] ;
	then
		exit 0 ;
else

clear && echo -e "\n" ;
nnumberr="0" ;
FILE="serv-if-up" ;

# temp folder
		if [[ "$(df -h | grep -E shm$ | cut -f2 -d% | tr -d '\ ')" != '' ]] ; 
	then
		tmpfolder="$(df -h | grep -E shm$ | cut -f2 -d% | tr -d '\ ')" ;
	else
		tmpfolder="/tmp" ;
fi
# temp folder END

whoIfacesUP(){
# which interface is trought the default route to the internet connected
# works only if you have two interfaces, like: eno[0-9] | eth[0-9] | wi[a-z-0-9] | wl[a-z-0-9]

		if [[ "$interface" =~ eno|eth ]] ;
	then
		whoUP="1" ;

		elif [[ "$interface" =~ wl|wi ]] ;
	then
		whoUP="2" ;
	else
		whoUP="none" ;
fi
}

findIface(){

		printf "WiFi or Ethernet? [W|E] " ; read -r
		
		if [[ $REPLY = w ]] ;
	then
		cat /root/.interfaces | head -n2 | tail -n1 > "$tmpfolder"/interface
		interface="$(cat "$tmpfolder"/interface)" ;
		echo -e " We run this Iface: $interface $(date | awk '{print $1,$3,$4}')\n" ;
		whoIfacesUP ;
		
		elif [[ $REPLY = e ]] ;
	then
		cat /root/.interfaces | head -n1 | tail -n1 > "$tmpfolder"/interface
		interface="$(cat "$tmpfolder"/interface)" ;
		echo -e " We run this Iface: $interface $(date | awk '{print $1,$3,$4}')\n" ;
		whoIfacesUP ;
	fi
		echo -e "\n :: D A N G E R nO shi3lD ::" ;
		echo -e " :: .changing macaddress. :: \n" &&
		source start_shield ;
}

exitHandler(){

		echo -e "-"
		printf " quit? (y/n) " ; read

		if [[ $REPLY =~ y|Y|j|J ]] ;
	then
		stop_shield --stop &
		killall -15 dhclient 2>/dev/null &&
		killall -15 serv-if-up 2>/dev/null &&
		rm -f $tmpfolder/root_mail_status &&
		exit 0 ;
		
		elif [[ $REPLY =~ n|N|\  ]] ;
	then
		return ;
fi
}

mess4ge(){
		spin='.oOo' ; i=0 ;
		spin2='-\|/' ;
		
		while [[ "$(ps aux | grep -E -i -w 'snort|clamd' | grep -v grep | awk '{print $11}' | grep -E 'snort|clamd' | wc -l | tr -d ' ')" = "2" ]] && [[ "$(ip link show "$interface" | grep ether | awk '{print $2}')" != "$(cat /root/.vendorsmac | head -n"${whoUP}" | tail -n1)" ]] ;
	do
		((nnumberr++));
		sleep .5 ; i=$(( (i+1) %4 )) ; printf "\r ${spin2:$i:1}${spin:$i:1} UPTIME: $nnumberr" ; sleep .4 ; printf "\r" ;
done
}
		if [[ $(ps aux | grep -v grep | grep -v nano | grep -v geany | grep "$FILE") = '' ]]
	then
		nice -14 setsid "$FILE" >/dev/null 2> /dev/null &
		wait ; sleep 1 ;
fi
		while trap 'exitHandler' SIGINT ;
	do
		if [[ ! $(netstat -ar) =~ 'default' ]] ;
	then
		echo " no internet - " ;
fi
		if [[ "$(ps aux | grep -E -i -w 'snort|clamd' | grep -v grep | awk '{print $11}' | grep -E 'snort|clamd' | wc -l | tr -d ' ')" = "2" ]] && [[ "$(ip link show "$interface" 2>/dev/null | grep ether | awk '{print $2}')" != "$(cat /root/.vendorsmac | head -n"${whoUP}" 2>/dev/null | tail -n1 2>/dev/null )" ]] ;
	then
		mess4ge ;

		elif [[ "$(ps aux | grep -E -i -w 'snort|clamd' | grep -v grep | awk '{print $11}' | grep -E 'snort|clamd' | wc -l | tr -d ' ')" != "2" ]] || [[ "$(ip link show "$interface" 2>/dev/null | grep ether | awk '{print $2}')" = "$(cat /root/.vendorsmac | head -n"${whoUP}" 2>/dev/null | tail -n1 2>/dev/null)" ]] ;
	then
		findIface ;
	fi
done
fi
