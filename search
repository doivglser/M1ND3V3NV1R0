#!/bin/bash
# mindevenviro search
#TODO: 
# problems with spaces IFS var
###     WARNING:    DON'T EDIT ANYTHING BELOW	###

				if [ "$EUID" != 0 ] ;
			then
				echo "sudo search -h :: please"
		else

LANG="C" ;
FILE="search" ;
line='' ;
#exithandler
trap 'pgrep $FILE | awk "{print $1}" | xargs kill -9 && pgrep less | awk "{print $1}" | xargs kill -9;' SIGINT ;

display(){
# display
echo -e "search $(date) :: as $SUDO_USER :: in $(uname -n) :: in $path ::" >>"/home/$SUDO_USER/.wH0rUNSon" ;
		while read line ;
	do
		wait ;
	
		if [[ $(echo "$line" | xargs file) =~ PDF|PHP|script|ASCII|text|TEXT|HTML|XML ]] ;
	then
			if [[ "$exclud3" != '' ]] ;
		then
			patternANDexclude="$(echo $line | xargs grep $togrep && echo $line | xargs | grep -v $exclud3)" ;
			tosearCH=$patternANDexclude ;
		else
			patternOnly="$(echo $line | xargs grep $togrep)" ;
			tosearCH=$patternOnly ;
	fi
			if [[ "$tosearCH" != '' ]] ;
		then
			uS3F=$(ls -sl "$line" | awk '{print $4}' | tr -d '\ ');
			
			if [[ ! $(echo "$line" | xargs file) =~ PDF ]] ;
		then
			sudo -u "$uS3F" less $line;
			pause=1 ;
		else
			sudo -u "$uS3F" mupdf $line 2>/dev/null ;
			pause=1 ;
		fi
		else
			echo -e " ... $(echo $line | xargs file) :: - nothing to show\r" ;
			pause=0 ;
fi
		else
			echo -e " ... no PDF|PHP|script|ASCII|text|TEXT|HTML|XML \r" ;
			pause=0 ;
fi
	done <<<"$lines" ;
# 					display END
}

help(){
shift 0 ;
echo "Usage: $0 [-s|--search] [PATH] [FILE-SUFFIX] [TOGREP] [TOEXCLUDE] || [-h|--help] " ;
echo -e "\n sudo this script:\n
SEARCH THE DRIVE\n
 This script searches your drive\r
 for everything in it, and displays\r
 only text in the less viewer.\r
 Finds: log files, example code, etc.\r" ;
 # SUDO_USER workflow control
exit 0 ;
	}

eingabe(){
pause=0 ;
for lines in $(find $path -regex '[a-zA-Z0-9\ \/\._].*' -type f 2>/dev/null | sed 's/\ /\\ /g' | sed 's/(/\(/g' | sed 's/)/\)/g' | grep -E "$suffixx"$ 2>/dev/null) ;
	do
		if [[ $pause = 1 ]] ;
	then
		read -r -p "continue? " && display && wait ;
	else
		display && wait ;
	fi ;
done
}

# ASK
  case "$1" in
        -s|--search)
      path=$2
      suffixx=$3
      togrep=$4
      exclud3=$5
      toshiffta=$(echo "$path $suffixx $togrep $exclud3" | wc -w) ;
      shift "$toshiffta" ;
      eingabe ;
      ;;
   -h|--help)
      toshiffta=0 ;
      shift "$toshiffta" ;
      help ;
      ;;
  esac
		if [[ ! $1 = '-s|--search|-h|--help' ]] ;
	then
		echo "Try '$0 --help' for more information."
	else
		eingabe ;
	fi
fi
