#!/bin/bash
# search by path and file suffix, if grep true open file
# TODO:
# Requested fill size "/var/log/syslog" is invalid while trying to open with nano -r -v
# Received SIGHUP or SIGTERM while trying to open with nano
# no workaround the signal-handler from less, if SIGINT trapped from script, less still catches the signal SIGINT.

LANG=C;
FILE="search" ;
declare -a array01 ;
array01='' ;
declare -a togrep ;
togrep='' ;
echo -e "\nsearch $(date) :: as $USER :: in $(uname -n) :: in $HOME :: WORK -\n" >>"$HOME/.wH0rUNSon" ;

# temp folder
                if [[ "$(df -h | grep -E shm$ | cut -f2 -d% | tr -d '\ ')" != '' ]] ;
        then
                #shm volatile
                tmpfolder="$(df -h | grep -E shm$ | cut -f2 -d% | tr -d '\ ')" ;
        else
                tmpfolder="/tmp" ;
fi
#               temp folder END
# temp file

# the whole list just with file suffix, ready to grep the content, if true, file in an editor.
touch "$tmpfolder/$(date | awk '{print $2,$6}' | sed 's/\ //g').tmp" ;
tmpfile="$tmpfolder/$(date | awk '{print $2,$6}' | sed 's/\ //g').tmp" ;
#               temp file END

display(){
# display
		while read -r line ;
	do
		if [[ $(file "$line") =~ PHP|script|ASCII|text|TEXT|HTML|XML ]] ;
	then
			if [[ $(echo "$line" | xargs grep "$togrep3" 2>/dev/null) = '' ]] || \
			[[ $(echo "$line" | xargs grep "$togrep2" 2>/dev/null) = '' ]] && \
			[[ $(echo "$line" | xargs grep "$togrep1" 2>/dev/null) = '' ]] ;
		then
			echo -e " ... $(echo "$line" | xargs file) :: - nothing to show\r" ;
			pause=0 ;
		else
			echo "$line" | xargs less ;
			pause=1 ;
fi
		else
			echo -e " ... no PHP|script|ASCII|text|TEXT|HTML|XML \r" ;
			pause=0 ;
fi
	done <<<"$lines"
# 					display END 
}

eexitt(){
			printf "ok to search again: " ; read -r

		if [[ "$REPLY" =~ ok|OK|Ja|JA|ja|j|J|yes|YES|y|Y|si|Si|SI|s|S ]] ;
	then
		$FILE && $(pgrep $FILE | awk '{print $1}' | xargs kill -9 && pgrep less | awk '{print $1}' | xargs kill -9) ;
	else
		echo -e " ...done?" ;
		# user workflow control
		echo -e "\nsearch $(date) :: as $USER :: in $(uname -n) :: in $HOME :: (HATO) -\n" >>"$HOME/.wH0rUNSon" ;
		exit 0 ;	
fi
	}

eingabe(){
trap 'eexitt' SIGINT ;
read -r -p "continue? " ;
clear ;
#printf "path: "; read path ;
echo -e "ussage: path suffix search-pattern"
read -r array01 ;
path=$(awk '{print $1}'<<<"$array01" | tr -d '\ ')
i=$(awk '{print $2}'<<<"$array01" | tr -d '\ ')
togrep1=$(awk '{print $3}'<<<"$array01" | tr -d '\ ')
togrep2=$(awk '{print $4}'<<<"$array01" | tr -d '\ ')
togrep3=$(awk '{print $5}'<<<"$array01" | tr -d '\ ')

for lines in $(find "$path" -name "*$i*" -type f 2>/dev/null | tee "$tmpfile") ;
	do
		if [[ $pause = 1 ]] ;
	then
		read -r -p "continue? " && display && wait ;
	else
		display && wait ;
	fi ;
done
$FILE && $(pgrep $FILE | awk '{print $1}' | xargs kill -9 && pgrep less | awk '{print $1}' | xargs kill -9) ;
}

# ASK
eingabe ;
