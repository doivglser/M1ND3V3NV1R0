#!/bin/bash
# search by path and file suffix, if grep true open file
# TODO:
# Requested fill size "/var/log/syslog" is invalid while trying to open with nano -r -v
# Received SIGHUP or SIGTERM while trying to open with nano
# no workaround the signal-handler from less, if SIGINT trapped from script, less still catches the signal SIGINT.

LANG=C;
IFS=$(echo -en "\n\b");
nnumber=0;
echo -e "\nsearch $(date) :: as $USER :: in $(uname -n) :: in $HOME :: WORK -\n" >>"$HOME/.wH0rUNSon" ;

# trap $USER's input ctrl+C and call the exithandler
trap 'exithandler' SIGINT  ;

# temp folder
                if [[ "$(df -h | grep -E shm$ | cut -f2 -d% | tr -d '\ ')" != '' ]] ;
        then
                #shm volatile
                tmpfolder="$(df -h | grep -E shm$ | cut -f2 -d% | tr -d '\ ')" ;
        else
                tmpfolder="/tmp" ;
fi
#               temp folder END
# temp file

# the whole list just with file suffix, ready to grep the content, if true, file in an editor.
touch "$tmpfolder/$(date | awk '{print $2,$3,$6}' | sed 's/\ //g').tmp" ;
tmpfile="$tmpfolder/$(date | awk '{print $2,$3,$6}' | sed 's/\ //g').tmp" ;
#               temp file END

display(){
# display
		nnumber=$(echo "$tmpfile" | wc -l | tr -d ' ') ;
				
		while read -r line ;
	do
		if [[ $(file "$line") =~ PHP|script|ASCII|text|TEXT|HTML|XML ]] ;
	then
			if [[ $(echo "$line" | xargs grep "$togrep") != '' ]] ;
		then
			((nnumber--)) ;
			echo "$line" | xargs less && read -p " -continue? " ;
		else
			((nnumber--)) ;
			fileis=$(echo "$line" | xargs file) ;
			echo -e " ... $fileis :: - nothing to show\r" ;
fi
		else
			echo -e " ... no PHP|script|ASCII|text|TEXT|HTML|XML \r" ;
fi
	done <<<"$lines"
# 					display END

# summary
		echo "$tmpfile" | xargs grep "$togrep">"$(date | awk '{print $2,$3,$6}' | sed 's/\ //g').tmp" ;
		echo -e "\n $(echo "$tmpfile" | xargs grep "$togrep" | wc -l | tr -d ' ') files found...\n"
# 					summary END

# exit?
			printf "ok to exit: " ; read
			
		if [ $REPLY = ok ] ;
	then
		echo -e " ...done?" ;
		echo -e "\nsearch $(date) :: as $USER :: in $(uname -n) :: in $HOME :: (HATO) -\n" >>"$HOME/.wH0rUNSon" ;
		sleep 1 && exit 0 ;
	else
		eingabe ;
fi
#					exit END
}

eingabe(){
# stdout to $USER read paht etc
echo -e "\n hi $USER\n press 'ctrl-C'+'q' to exit\n" ;
#printf "path: "; read path ;
printf "search path: "; read -r path ;
echo -e "\n" ;
printf "file suffix: "; read -r i ;
echo -e "\n" ;
printf "to grep: "; read -r togrep ;
#               stdout to $USER END
# search and display
for lines in $(find "$path" -name "*$i*" -type f 2>/dev/null | sed 's/\ /\\ /g' | tee -a "$tmpfile") ;
	do
		display ;
done
#		search and display END
}

# ASK
eingabe ;
