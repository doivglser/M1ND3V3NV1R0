#!/bin/bash
# search by path and file suffix, if grep true open file
# TODO:
# Requested fill size "/var/log/syslog" is invalid while trying to open with nano -r -v
# Received SIGHUP or SIGTERM while trying to open with nano
# no workaround the signal-handler from less, if SIGINT trapped from script, less still catches the signal SIGINT.

set -x

LANG=C;
FILE="search" ;

				if [ "$EUID" != 0 ] ;
			then
				sudo "$0" ;
		else
		
echo -e "search $(date) :: as $USER :: in $(uname -n) :: in $HOME :: WORK -" >>"/home/$SUDO_USER/.wH0rUNSon" ;

# temp folder
                if [[ "$(df -h | grep -E shm$ | cut -f2 -d% | tr -d '\ ')" != '' ]] ;
        then
                #shm volatile
                tmpfolder="$(df -h | grep -E shm$ | cut -f2 -d% | tr -d '\ ')" ;
        else
                tmpfolder="/tmp" ;
fi
#               temp folder END
# temp file

# the whole list just with file suffix, ready to grep the content, if true, file in an editor.
touch "$tmpfolder/$(date | awk '{print $2,$6}' | sed 's/\ //g').tmp" ;
tmpfile="$tmpfolder/$(date | awk '{print $2,$6}' | sed 's/\ //g').tmp" ;
#               temp file END

display(){
# display
		while read -r line ;
	do
		if [[ $(file "$line") =~ PHP|script|ASCII|text|TEXT|HTML|XML ]] ;
	then
			if [[ $(echo "$line" | xargs grep "$togrep3" 2>/dev/null) = '' ]] || \
			[[ $(echo "$line" | xargs grep "$togrep2" 2>/dev/null) = '' ]] && \
			[[ $(echo "$line" | xargs grep "$togrep1" 2>/dev/null) = '' ]] ;
		then
			echo -e " ... $(echo "$line" | xargs file) :: - nothing to show\r" ;
			pause=0 ;
		else
			echo "$line" | xargs less ;
			pause=1 ;
fi
		else
			echo -e " ... no PHP|script|ASCII|text|TEXT|HTML|XML \r" ;
			pause=0 ;
fi
	done <<<"$lines"
# 					display END 
}

eexitt(){
			printf " exit[y/n]" ; read -r

		if [[ "$REPLY" = "n" ]] ;
	then
		$FILE && $(pgrep $FILE | awk '{print $1}' | xargs kill -9 && pgrep less | awk '{print $1}' | xargs kill -9) ;
	else
		echo -e " ...done?" ;
		# user workflow control 
		echo -e "search $(date) :: as $USER :: in $(uname -n) :: in $HOME :: (HATO) -" >>"/home/$SUDO_USER/.wH0rUNSon" ;
		exit 0 ;	
fi
	}

help(){
echo "Usage: $0 [-s|--search] [-h|--help] PATH SEARCH-PATTERN TOGREP TOGREP TOGREP" ;
echo -e "\n sudo this script:\n
SEARCH THE DRIVE\n
 This script searches your drive\r
 for everything in it, and displays\r
 only text in the less viewer.\r
 Finds: log files, example code, etc.\r" ;
	}

eingabe(){
trap 'eexitt' SIGINT ;

	if [[ "$path" = '' ]] || [[ "$tosearch" = '' ]] || [[ "$togrep1" = '' ]];
then
	help ;
else

for lines in $(find "$path" -name "*$tosearch*" -type f 2>/dev/null | tee "$tmpfile") ;
	do
		if [[ $pause = 1 ]] ;
	then
		read -r -p "continue? " && display && wait ;
	else
		display && wait ;
	fi ;
done
$FILE && $(pgrep $FILE | awk '{print $1}' | xargs kill -9 && pgrep less | awk '{print $1}' | xargs kill -9) ;
fi
}

# ASK
while test -n "$1"; do
  case "$1" in
   -s|--search)
      path=$1
      tosearch=$2
      togrep1=$3
      togrep2=$4
      togrep3=$5
      shift "$@" ;
      eingabe ;
      ;;
   -h|--help)
      REPLY="help"
      shift
      ;;            
  esac
done

fi
