#!/bin/bash
# mindevenviro start_shield
###     WARNING:    DON'T EDIT ANYTHING BELOW       ###
LANG="C" ;
IFS=$(echo -e "\n\b") ;

		if [ ! $EUID = 0 ] ;
	then
		echo -e " USAGE: sudo shi3lD \r depends on redundanz" ;
		exit 0 ;
else
	if [[ "$(ps aux | grep -v grep | grep -v nano | grep shi3lD | awk '{print $2}' | wc -l) " -ge "1" ]] ;
then

stopLoop="0" ;
antivirus="/usr/sbin/clamd" ;
nids="/usr/sbin/snort" ;
homeordner="/home/${SUDO_USER}/" ;

# temp folder
		if [[ "$(df -h | grep -E shm$ | cut -f2 -d% | tr -d '\ ')" != '' ]] ; 
	then
		tmpfolder="$(df -h | grep -E shm$ | cut -f2 -d% | tr -d '\ ')" ;
	else
		tmpfolder="/tmp" ;
fi
# temp folder END

permissions(){
		sudo chown $SUDO_USER:$SUDO_USER "$(date | awk '{print $2,$6}' | sed 's/\ //g')" 2>/dev/null ;
		sudo chmod 0750 "$(date | awk '{print $2,$6}' | sed 's/\ //g')" 2>/dev/null ;
}

writem4c_Connected(){

		if [[ -e "${homeordner}$(date | awk '{print $2,$6}' | sed 's/\ //g').mac_recieves_dhcp_lease" ]]
	then
		echo -e "$(ip link show "$interface" | grep ether | awk '{print $2}') :: surf started at: $(date | \
		awk '{print $1, $2, $3, $4, $6}' | sed 's/\ /::/g') -" >> "${homeordner}$(date | awk '{print $2,$6}' | \
		sed 's/\ //g').mac_recieves_dhcp_lease" && permissions ;
	else
		touch "${homeordner}$(date | awk '{print $2,$6}' | sed 's/\ //g').mac_recieves_dhcp_lease" ;
		echo -e "$(ip link show "$interface" | grep ether | awk '{print $2}') :: surf started at: $(date | \
		awk '{print $1, $2, $3, $4, $6}' | sed 's/\ /::/g') -" >> "${homeordner}$(date | awk '{print $2,$6}' | \
		sed 's/\ //g').mac_recieves_dhcp_lease" && permissions ;
fi
}

writem4c_SelfAssigned(){

		if [[ -e "${homeordner}$(date | awk '{print $2,$6}' | sed 's/\ //g').mac_no_dhcp_lease" ]]
	then
		echo -e "$(ip link show "$interface" | grep ether | awk '{print $2}') :: surf started at: $(date | \
		awk '{print $1, $2, $3, $4, $6}' | sed 's/\ /::/g') -" >> "${homeordner}$(date | awk '{print $2,$6}' | \
		sed 's/\ //g').mac_no_dhcp_lease" && permissions ;
	else
		touch "${homeordner}$(date | awk '{print $2,$6}' | sed 's/\ //g').mac_no_dhcp_lease" ;
		echo -e "$(ip link show "$interface" | grep ether | awk '{print $2}') :: surf started at: $(date | \
		awk '{print $1, $2, $3, $4, $6}' | sed 's/\ /::/g') -" >> "${homeordner}$(date | awk '{print $2,$6}' | \
		sed 's/\ //g').mac_no_dhcp_lease" && permissions ;
fi
}

ifUPAntiVirusFireWall(){

		until [[ $(ps aux | grep -E -i -w 'snort|clamd' | grep -v grep | awk '{print $11}' | wc -l | tr -d ' ') = "2" ]] ;
	do
		if [[ "$(ps aux | grep -v grep | grep clamd | grep -v nano | awk '{print $11}')" != "$antivirus" ]]
	then
		printf "\r restarting ClamAV..." ;
		nohup nids-antivirus-up --anTiVirus &
		sleep 1 ;
	fi	
	    if [[ "$(ps aux | grep -v grep | grep snort | grep -v nano | awk '{print $11}')" != "$nids" ]]
	then
		if [[ $(netstat -ar) =~ 'default' ]] ; # looks in the routing table for an internet connection
    then
		printf "\r restarting Snort..." ;
		nohup nids-antivirus-up --nIDs &
		sleep 1 ;
	else
		printf "\rno connection to set Iface up - " ; sleep 1 ;
	fi
fi
done
}

interface="$(cat "$tmpfolder"/interface)" ;

		if [[ "$interface" =~ eno|eth ]] ;
	then
		whoUP="1" ;

		elif [[ "$interface" =~ wl|wi ]] ;
	then
		whoUP="2" ;
	else
		whoUP="none" ;
fi

puff_MACs(){

stop_shield --stop &
sotstoppe="1" ;

		until [[ "$sotstoppe" = "0" ]] ;
	do
		echo -e "puffing MACs ...\n" ;
		neWMacAdr=$(openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//') &&
		sudo ip link set dev "$interface" address "$neWMacAdr" &&
		sudo ip link set dev "$interface" up &&
		until [[ "$(ps aux | grep -v grep | grep -v nano | grep /sbin/dhclient)" != '' ]] ;
	do
		printf "\rplease connect with network (wicd) - " && sleep 9 ;
		
		if [[ "$(ip link show "$interface" | grep ether | awk '{print $2}')" != "$(cat /root/.vendorsmac | head -n"${whoUP}" | tail -n1)" ]] ;
	then	
		((sotstoppe--)) ;
		ifUPAntiVirusFireWall ;
fi
done
done
}
		while [[ $stopLoop != "1" ]]
	do
		if [[ $(netstat -ar) =~ 'default' ]] ; # looks in the routing table for an internet connection
    then
        clear ;
        echo -e "\n - WE HAVE shi3lD ::\n" ;
        echo -e " done ! we go throught $(netstat -ar | grep -v grep | grep default | awk '{print $2}') \n $(ip route | grep -v grep | grep src) \n and $interface has now this MAC-Address: $(ip link show "$interface" | grep ether | awk '{print $2}')\n" ;
        writem4c_Connected ;
        stopLoop="1" ;
    else
        echo -e "no connection with this $(ip link show "$interface" | grep ether | awk '{print $2}'), I try again ..."
        puff_MACs && writem4c_SelfAssigned ;
	fi
done
fi
fi
